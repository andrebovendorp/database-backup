name: Build and Release Binary

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  BINARY_NAME: database-backup

jobs:
  build-binary:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    - name: Build executable with Nuitka
      run: |
        python -m nuitka \
          --onefile \
          --standalone \
          --output-filename=${{ env.BINARY_NAME }} \
          --include-data-files=config.yaml.example=config.yaml.example \
          --include-data-files=env.example=env.example \
          --assume-yes-for-downloads \
          main.py

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.BINARY_NAME }}-${{ matrix.os }}
        path: ${{ env.BINARY_NAME }}.dist/${{ env.BINARY_NAME }}
        retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: build-binary
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/${{ env.BINARY_NAME }}-ubuntu-latest/*
          artifacts/${{ env.BINARY_NAME }}-windows-latest/*
          artifacts/${{ env.BINARY_NAME }}-macos-latest/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
